<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="modal.css">
    <title>Full Report List</title>
    <!--ajax-->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>

    <%- include('../partials/header'); %>
</head>
<style>
    .selected{
        background-color: grey;
    }
</style>
<body>
    <h3>Filters</h3>
    <div>
        <button class="report_filter">licence</button>
        <button class="report_filter">All</button>
    </div>
    <h2>Pending</h2>
    <%
    if(pending_reports.length == 0){%>
        <span>No pending reports</span>
    <%}
    else{
        for(var i=pending_reports.length - 1; i>=0; i--){ %>
            <div class = <%= pending_reports[i].reason %>>
                <span>Report Reason: <%= pending_reports[i].reason %></span>
                <br>
                <span>Reported on: <%= pending_reports[i].registrationDate %></span>
                <br>
                <% 
                    var reporter = null;
                    for(var j=0;j < user_list.length;j++){
                        if(user_list[j].id == pending_reports[i].reporter_id){
                            reporter = user_list[j];
                            break;
                        }
                    }
                %>
                <span>Reported by: <a href="/userProfile?id=<%=pending_reports[i].reporter_id%>"><%= reporter.firstName %> <%= reporter.lastName %></a></span>
                <br>
                <button class="reportButtons" id="visitReport" name="visitReport" onclick="modal.createAndOpen('<%- pending_reports[i]._id %>','<%- pending_reports[i].reason %>', '<%- pending_reports[i].text %>', '<%- pending_reports[i].registrationDate %>', 'pending')">Details</button>
            </div>
        <%}
    }%>
    <h2>Reviewed</h2>
    <%
    if(reviewed_reports.length == 0){%>
        <span>No reviewed reports yet</span>
    <%}
    else{
        for(var i=reviewed_reports.length - 1; i>=0; i--){ %>
            <span>Report Reason: <%= reviewed_reports[i].reason %></span>
            <br>
            <span>Reported on: <%= reviewed_reports[i].registrationDate %></span>
            <br>
            <% 
                var reporter = null;
                for(var j=0;j < user_list.length;j++){
                    if(user_list[j].id == reviewed_reports[i].reporter_id){
                        reporter = user_list[j];
                        break;
                    }
                }
            %>
            <span>Reported by: <a href="/userProfile?id=<%=reviewed_reports[i].reporter_id%>"><%= reporter.firstName %> <%= reporter.lastName %></a></span>
            <br>
            <button class="reportButtons" id="visitReport" name="visitReport" onclick="modal.createAndOpen('<%- reviewed_reports[i]._id %>','<%- reviewed_reports[i].reason %>', '<%- reviewed_reports[i].text %>', '<%- reviewed_reports[i].registrationDate %>', 'reviewed')">Details</button>
            <br>
            <br>
        <%}
    }%>
    <h2>Dismissed</h2>
    <%
    if(dismissed_reports.length == 0){%>
        <span>No dismissed reports yet</span>
    <%}
    for(var i=dismissed_reports.length - 1; i>=0; i--){ %>
        <span>Report Reason: <%= dismissed_reports[i].reason %></span>
        <br>
        <span>Reported on: <%= dismissed_reports[i].registrationDate %></span>
        <br>
        <% 
            var reporter = null;
            for(var j=0;j < user_list.length;j++){
                if(user_list[j].id == dismissed_reports[i].reporter_id){
                    reporter = user_list[j];
                    break;
                }
            }
        %>
        <span>Reported by: <a href="/userProfile?id=<%=dismissed_reports[i].reporter_id%>"><%= reporter.firstName %> <%= reporter.lastName %></a></span>
        <br>
        <button class="reportButtons" id="visitReport" name="visitReport" onclick="modal.createAndOpen('<%- dismissed_reports[i]._id %>','<%- dismissed_reports[i].reason %>', '<%- dismissed_reports[i].text %>', '<%- dismissed_reports[i].registrationDate %>', 'dismissed')">Details</button>
        <br>
        <br>
    <%}%>
    <%- include('../partials/footer'); %>
</body>
<script>
    class ReportModal{
           constructor({
               title,
               details,
               date,
               reviewed,
               dismissed,
               cancel
           }){
               this.title = title;
               this.details = details;
               this.date = date;
               this.reviewed = 'Mark as reviewed',
               this.dismissed = 'Dismiss',
               this.cancel = 'X'
           }
       
           
           createAndOpen(id, reason, text, date, resolve, reject){
               this.modalElem = document.createElement('div');
               this.modalElem.classList.add('modal');
               setTimeout(()=>{
                   this.modalElem.classList.add('open');
               }, 400);
       
       
               const modalContentElem = document.createElement('div');
               modalContentElem.classList.add('content');
       
               this.modalElem.appendChild(modalContentElem);
       
               //cancel
               const cancelTextElem = document.createElement('button');
               cancelTextElem.classList.add('cancel');
               cancelTextElem.textContent = this.cancel;
       
               modalContentElem.appendChild(cancelTextElem);
       
               cancelTextElem.addEventListener('click', () =>{
                   this.close();
               });
       
               this.modalElem.addEventListener('click', event => {
                   if (event.target.className === 'modal open') {
                       this.close()
                   }
               });
       
               
               //title
               const titleTextElem = document.createElement('p');
               titleTextElem.classList.add('title');
               titleTextElem.textContent = reason;
       
               modalContentElem.appendChild(titleTextElem);
       
               //date
               const dateTextElem = document.createElement('p');
               dateTextElem.classList.add('date');
               dateTextElem.textContent = date;
       
               modalContentElem.appendChild(dateTextElem);
       
       
               //details
               const detailsTextElem = document.createElement('p');
               detailsTextElem.classList.add('details');
               detailsTextElem.textContent = text;
       
               modalContentElem.appendChild(detailsTextElem);

               // Create the form element
                const actionForm = document.createElement('form');
                actionForm.setAttribute('method', 'POST');

                // Create a hidden input field to dynamically set the action URL
                const actionInput = document.createElement('input');
                //actionInput.setAttribute('type', 'hidden');
                actionForm.appendChild(actionInput);
                actionInput.setAttribute('name', 'action');

                // Function to handle button click events
                function handleButtonClick(actionUrl) {
                    actionInput.setAttribute('value', "");
                    actionInput.setAttribute('value', actionUrl);
                    actionForm.setAttribute('action', '/review-report?id='+id+"&action="+actionUrl);
                    actionForm.submit();
                }

                // Create the reviewed button
                const reviewedButton = document.createElement('input');
                reviewedButton.setAttribute('type', 'button');
                reviewedButton.classList.add('reviewed');
                reviewedButton.value = 'Reviewed';
                reviewedButton.addEventListener('click', function() {
                    handleButtonClick('reviewed');
                });

                 // Create the Execute button
                 const executeButton = document.createElement('input');
                 executeButton.setAttribute('type', 'button');
                 executeButton.classList.add('executed');
                 executeButton.value = 'Execute';
                 executeButton.addEventListener('click', function() {
                    handleButtonClick('executed');
                });

                // Create the dismissed button
                const dismissedButton = document.createElement('input');
                dismissedButton.setAttribute('type', 'button');
                dismissedButton.classList.add('dismissed');
                dismissedButton.value = 'Dismissed';
                dismissedButton.addEventListener('click', function() {
                    handleButtonClick('dismissed');
                });

                // Append buttons to the form
                actionForm.appendChild(executeButton);
                actionForm.appendChild(reviewedButton);
                actionForm.appendChild(dismissedButton);

                // Append the form to modal content or body
                modalContentElem.appendChild(actionForm);

                /*
               //reviewed
               const reviewedButtonForm = document.createElement('form');
               reviewedButtonForm.setAttribute('action', '/review-report?id='+id);
               reviewedButtonForm.setAttribute('method', 'POST');
               
               const reviewedTextElem = document.createElement('input');
               reviewedTextElem.setAttribute('type', 'submit');
               reviewedTextElem.classList.add('reviewed');
               reviewedTextElem.value = this.reviewed;
       
               reviewedButtonForm.appendChild(reviewedTextElem);
               modalContentElem.appendChild(reviewedButtonForm);
       
       
               //dismissed
               const dismissedButtonForm = document.createElement('form');
               dismissedButtonForm.setAttribute('action', '/dismiss-report?id='+id);
               dismissedButtonForm.setAttribute('method', 'POST');
       
       
               const dismissedTextElem = document.createElement('input');
               dismissedTextElem.setAttribute('type', 'submit');
               dismissedTextElem.classList.add('dismissed');
               dismissedTextElem.value = this.dismissed;
       
               dismissedButtonForm.appendChild(dismissedTextElem);
               modalContentElem.appendChild(dismissedButtonForm);*/
       
               document.body.appendChild(this.modalElem);
           }
       
           open(){
               return new Promise((resolve, reject)=>{
                   this.createAndOpen(resolve, reject);
               });
           }
       
           close(){
               this.modalElem.classList.remove('open');
               setTimeout(()=>{
                   document.body.removeChild(this.modalElem);
               }, 400);
           }
       
       }
   
       const modal = new ReportModal({
           title: 'Title Goes Here',
           details: 'These are the Details',
           date: 'This is the Date',
           reporter:'This is the Person Reporting',
           reported:'This is the Person being Reported'
       });
</script>
</html>
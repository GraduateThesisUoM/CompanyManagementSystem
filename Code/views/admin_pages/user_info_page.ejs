<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="modal.css">
    <title>User Profile</title>
</head>
<body>
    <div id="user-info-admin-div" name="user-info-admin-div">
        <h1><%= user.firstName; %> <%= user.lastName; %></h1>
        <h2>Email: <%= user.email; %></h2>
        <h2>User type: <%= user.type; %></h2>
        <h2>Ban status: <%= user.banned; %></h2>

        <form action=""  method="POST">
            <% if(user.banned === true){ %>
                <input type="submit" id="unban-button" name="unban-button" value="Unban User">
            <% }else{ %>
                <input type="submit" id="ban-button" name="ban-button" value="Ban User">
            <% } %>
        </form>
        
    </div>
    <div id="user-reviews-admin-div" name="user-reviews-admin-div">
        <h1>Reviews</h1>
    </div>
    <hr>
    <h1>Relationships</h1>
    <hr>
    <div id="user-reports-admin-div" name="user-reports-admin-div">
        <h1>Reports</h1>
        <% for(var i=0; i<reports.length ;i++){ %>
             <a href="report-page?id=<%=reports[i]._id%>"><span><%= reports[i].reason %></span>
             <br>
             <span><%= reports[i].registrationDate %></span></a>
             <br>
             <button class="reportButtons" id="visitReport" name="visitReport" value="<%=reports[i]%>" onclick="modal.createAndOpen(this.value)">Details</button>
             <br>
        <%}%>

    </div>

</body>
<script>
    class ReportModal{
    constructor({
        title,
        details,
        date,
        reporter,
        reported,
        reviewed,
        dismissed,
        cancel
    }){
        this.title = title;
        this.details = details;
        this.date = date;
        this.reporter = reporter;
        this.reported = reported;
        this.reviewed = 'Mark as reviewed',
        this.dismissed = 'Dismiss',
        this.cancel = 'X'
    }

    createAndOpen(val, resolve, reject){
        this.modalElem = document.createElement('div');
        this.modalElem.classList.add('modal');
        setTimeout(()=>{
            this.modalElem.classList.add('open');
        }, 400);

        const modalContentElem = document.createElement('div');
        modalContentElem.classList.add('content');

        this.modalElem.appendChild(modalContentElem);

        //cancel
        const cancelTextElem = document.createElement('button');
        cancelTextElem.classList.add('cancel');
        cancelTextElem.textContent = this.cancel;

        modalContentElem.appendChild(cancelTextElem);

        cancelTextElem.addEventListener('click', () =>{
            this.close();
        });

        this.modalElem.addEventListener('click', event => {
            if (event.target.className === 'modal open') {
                this.close()
            }
        });
        //title
        const titleTextElem = document.createElement('p');
        titleTextElem.classList.add('title');
        titleTextElem.textContent = this.title;

        modalContentElem.appendChild(titleTextElem);

        //date
        const dateTextElem = document.createElement('p');
        dateTextElem.classList.add('date');
        dateTextElem.textContent = this.date;

        modalContentElem.appendChild(dateTextElem);

        //reported
        const reportedTextElem = document.createElement('p');
        reportedTextElem.classList.add('reported');
        reportedTextElem.textContent = this.reported;

        modalContentElem.appendChild(reportedTextElem);

        //details
        const detailsTextElem = document.createElement('p');
        detailsTextElem.classList.add('details');
        detailsTextElem.textContent = this.details;

        modalContentElem.appendChild(detailsTextElem);

        //reviewed
        const reviewedTextElem = document.createElement('button');
        reviewedTextElem.classList.add('reviewed');
        reviewedTextElem.textContent = this.reviewed;

        modalContentElem.appendChild(reviewedTextElem);


        //dismissed
        const dismissedTextElem = document.createElement('button');
        dismissedTextElem.classList.add('dismissed');
        dismissedTextElem.textContent = this.dismissed;

        modalContentElem.appendChild(dismissedTextElem);

        document.body.appendChild(this.modalElem);
    }

    open(){
        return new Promise((resolve, reject)=>{
            this.createAndOpen(resolve, reject);
        });
    }

    close(){
        this.modalElem.classList.remove('open');
        setTimeout(()=>{
            document.body.removeChild(this.modalElem);
        }, 400);
    }
}

    const modal = new ReportModal({
        title: 'This is a title',
        details: 'these are the details',
        date: 'kkkkkk',
        reporter:'dddddddd',
        reported:'mmmmmmmmmmmm',
    });

    //const reportButton = document.querySelectorAll('.reportButtons');

    //reportButton.forEach(reportButton => 
    //{reportButton.addEventListener('click', ()=> {
    //        modal.createAndOpen();
    //    })
    //});
</script>

</html>